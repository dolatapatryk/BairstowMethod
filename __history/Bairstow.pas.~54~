unit Bairstow;

interface
uses
IntervalArithmetic32and64;
type
cplxvector = array of record
          re,im:Extended
          end;
vector = array of Extended;

cplxvectorInterval = array of record
          re,im:Interval;
          end;
vectorInterval = array of Interval;

procedure BairstowNormal(n          : Integer;
                    a               : vector;
                    mit             : Integer;
                    mincorr,zerodet : Extended;
                    var z,w         : cplxvector;
                    var it,st       : Integer);
procedure BairstowInterval(n:Integer;
                    a:vectorInterval;
                    mit:Integer;
                    mincorr,zerodet:Extended;
                    var z,w:cplxvectorInterval;
                    var it,st:Integer);
function najmniejszaWartoscBezwzgledna(x:Interval):Extended;
function najwiekszaWartoscBezwzgledna(x:Interval):Extended;
function absInterval(x:Interval):Interval;

implementation

procedure BairstowNormal;
var i,k,n1                       : Integer;
    m,p,pq0,pq1,q,q0,q1,q2,q3,q4 : Extended;
    cond,endpq                   : Boolean;
    b                            : vector;
begin
  SetLength(b,n+1);
  if (n<1) or (mit<1) or (mincorr<=0) or (zerodet<=0)
    then st:=1
    else begin
           for i:=0 to n do
             b[n-i]:=a[i];
           st:=0;
           i:=1;
           p:=-1;
           q:=-1;
           n1:=n-1;
           cond:=true;
           it:=0;
           repeat
             if n=1
               then begin
                      z[i].re:=-b[1]/b[0];
                      z[i].im:=0;
                      cond:=false
                    end
               else begin
                      if n=2
                        then begin
                               q:=b[0];
                               p:=b[1]/q;
                               q:=b[2]/q;
                               cond:=false
                             end
                        else begin
                               pq0:=1.0e63;
                               pq1:=pq0;
                               endpq:=true;
                               repeat
                                 it:=it+1;
                                 q0:=0;
                                 q1:=0;
                                 q2:=b[0];
                                 q3:=b[1]-p*q2;
                                 for k:=2 to n do
                                   begin
                                     q4:=b[k]-p*q3-q*q2;
                                     q2:=q2-p*q1-q*q0;
                                     q0:=q1;
                                     q1:=q2;
                                     q2:=q3;
                                     q3:=q4
                                   end;
                                 if abs(q2)+abs(q3)<zerodet
                                   then endpq:=false
                                   else begin
                                          m:=q*q0+p*q1;
                                          q4:=q1*q1+m*q0;
                                          if abs(q4)<zerodet
                                            then st:=2
                                            else begin
                                                   q0:=(q1*q2-q0*q3)/q4;
                                                   q1:=(m*q2+q1*q3)/q4;
                                                   q2:=abs(q0);
                                                   q3:=abs(q1);
                                                   if (q2>mincorr)
                                                     or (q3>mincorr)
                                                     or (q2<pq0)
                                                     and (q3<pq1)
                                                     then begin
                                                            p:=p+q0;
                                                            pq0:=q2;
                                                            q:=q+q1;
                                                            pq1:=q3
                                                          end
                                                     else endpq:=false;
                                                   if (it=mit) and endpq
                                                     then st:=3
                                                 end
                                        end
                               until (st<>0) or not endpq
                             end;
                      if st=0
                        then begin
                               m:=-p/2;
                               q0:=m*m-q;
                               q1:=sqrt(abs(q0));
                               if q0<0
                                 then begin
                                        z[i].re:=m;
                                        z[i+1].re:=m;
                                        z[i].im:=q1;
                                        z[i+1].im:=-q1
                                      end
                                 else begin
                                        if m>0
                                          then m:=m+q1
                                          else m:=m-q1;
                                        z[i+1].re:=m;
                                        if abs(m)=0
                                          then z[i].re:=0
                                          else z[i].re:=q/m;
                                        z[i].im:=0;
                                        z[i+1].im:=0
                                      end;
                               if n>2
                                 then begin
                                        i:=i+2;
                                        n:=n-2;
                                        q0:=0;
                                        q1:=b[0];
                                        for k:=1 to n do
                                          begin
                                            q2:=b[k]-p*q1-q*q0;
                                            b[k]:=q2;
                                            q0:=q1;
                                            q1:=q2
                                          end
                                      end
                             end
                    end
           until (st<>0) or not cond;
           if st=0
             then begin
                    n:=n1+1;
                    for i:=1 to n do
                      begin
                        p:=z[i].re;
                        q:=z[i].im;
                        q1:=a[n];
                        if q=0
                          then begin
                                 for k:=n1 downto 0 do
                                   q1:=q1*p+a[k];
                                 q2:=0
                               end
                          else begin
                                 q0:=sqrt(sqr(p)+sqr(q));
                                 q3:=2*arctan(q/(p+q0));
                                 q4:=n*q3;
                                 q2:=q1*sin(q4);
                                 q1:=q1*cos(q4);
                                 for k:=n1 downto 0 do
                                   begin
                                     p:=a[k];
                                     q4:=k*q3;
                                     q1:=q1*q0+p*cos(q4);
                                     q2:=q2*q0+p*sin(q4)
                                   end
                               end;
                        w[i].re:=q1;
                        w[i].im:=q2
                      end
                  end
         end
end;

procedure BairstowInterval;
var i,k,n1,st1                       : Integer;
    m,p,pq0,pq1,q,q0,q1,q2,q3,q4 : Interval;
    cond,endpq                   : Boolean;
    b                            : vectorInterval;
    tmp                       : Interval;
begin
  SetLength(b,n+1);
  if (n<1) or (mit<1) or (mincorr<=0) or (zerodet<=0)
    then st:=1
    else begin
           for i:=0 to n do
             b[n-i]:=a[i];
           st:=0;
           i:=1;
           p:=-1;
           q:=-1;
           n1:=n-1;
           cond:=true;
           it:=0;
           repeat
             if n=1
               then begin
                      z[i].re:=-b[1]/b[0];
                      z[i].im:=0;
                      cond:=false
                    end
               else begin
                      if n=2
                        then begin
                               q:=b[0];
                               p:=b[1]/q;
                               q:=b[2]/q;
                               cond:=false
                             end
                        else begin
                               pq0:=1.0e63;
                               pq1:=pq0;
                               endpq:=true;
                               repeat
                                 it:=it+1;
                                 q0:=0;
                                 q1:=0;
                                 q2:=b[0];
                                 q3:=b[1]-p*q2;
                                 for k:=2 to n do
                                   begin
                                     q4:=b[k]-p*q3-q*q2;
                                     q2:=q2-p*q1-q*q0;
                                     q0:=q1;
                                     q1:=q2;
                                     q2:=q3;
                                     q3:=q4
                                   end;
                                 if (absInterval(q2)+absInterval(q3))<zerodet
                                   then endpq:=false
                                   else begin
                                          m:=q*q0+p*q1;
                                          q4:=q1*q1+m*q0;
                                          if absInterval(q4)<zerodet
                                            then st:=2
                                            else begin
                                                   q0:=(q1*q2-q0*q3)/q4;
                                                   q1:=(m*q2+q1*q3)/q4;
                                                   q2:=absInterval(q0);
                                                   q3:=absInterval(q1);
                                                   if (q2>mincorr)
                                                     or (q3>mincorr)
                                                     or (q2<pq0)
                                                     and (q3<pq1)
                                                     then begin
                                                            p:=p+q0;
                                                            pq0:=q2;
                                                            q:=q+q1;
                                                            pq1:=q3
                                                          end
                                                     else endpq:=false;
                                                   if (it=mit) and endpq
                                                     then st:=3
                                                 end
                                        end
                               until (st<>0) or not endpq
                             end;
                      if st=0
                        then begin
                               m:=-p/2;
                               q0:=m*m-q;
                               q1:=isqrt(absInterval(q0),st1);
                               if q0.b<0
                                 then begin
                                        z[i].re:=m;
                                        z[i+1].re:=m;
                                        z[i].im:=q1;
                                        z[i+1].im:=-q1
                                      end
                                 else begin
                                        if m>0
                                          then m:=m+q1
                                          else m:=m-q1;
                                        z[i+1].re:=m;
                                        if absInterval(m)=0
                                          then z[i].re:=0
                                          else z[i].re:=q/m;
                                        z[i].im:=0;
                                        z[i+1].im:=0
                                      end;
                               if n>2
                                 then begin
                                        i:=i+2;
                                        n:=n-2;
                                        q0:=0;
                                        q1:=b[0];
                                        for k:=1 to n do
                                          begin
                                            q2:=b[k]-p*q1-q*q0;
                                            b[k]:=q2;
                                            q0:=q1;
                                            q1:=q2
                                          end
                                      end
                             end
                    end
           until (st<>0) or not cond;
           if st=0
             then begin
                    n:=n1+1;
                    for i:=1 to n do
                      begin
                        p:=z[i].re;
                        q:=z[i].im;
                        q1:=a[n];
                        if q=0
                          then begin
                                 for k:=n1 downto 0 do
                                   q1:=q1*p+a[k];
                                 q2:=0
                               end
                          else begin
                                 q0:=isqrt(isqr(p,st1)+isqr(q,st1),st1);
                                 //q3:=2*arctan(q/(p+q0));
                                 tmp.a:=arctan(q.a/(p.a+q0.a));
                                 tmp.b:=arctan(q.b/(p.b+q0.b));
                                 q3:=2*tmp;
                                 q4:=n*q3;
                                 q2:=q1*isin(q4,st1);
                                 q1:=q1*icos(q4,st1);
                                 for k:=n1 downto 0 do
                                   begin
                                     p:=a[k];
                                     q4:=k*q3;
                                     q1:=q1*q0+p*icos(q4,st1);
                                     q2:=q2*q0+p*isin(q4,st1)
                                   end
                               end;
                        w[i].re:=q1;
                        w[i].im:=q2
                      end
                  end
         end
end;

function najmniejszaWartoscBezwzgledna;
begin
if((0>=x.a) and (0<=x.b))then
begin
Result:=0;
end
else
begin
if(abs(x.a)>=abs(x.b)) then
begin
  Result:=abs(x.b);
end
else
begin
  Result:=abs(x.a);
end;
end;
end;

function najwiekszaWartoscBezwzgledna;
begin
if abs(x.a)>=abs(x.b) then
begin
  Result:=x.a;
end
else
begin
  Result:=x.b;
end;
end;

function absInterval;
var
s1,s2:string;
y:Extended;
begin
 Str(najmniejszaWartoscBezwzgledna(x):26,s1);
 Str(najwiekszaWartoscBezwzgledna(x):26,s2);
 Result.a:=left_read(s1);
 Result.b:=right_read(s2);
end;

end.
